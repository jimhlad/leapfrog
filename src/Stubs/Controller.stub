<?php

namespace {{namespace}};

use App\Http\Controllers\Controller;
{{useStatements}}

class {{entity}}Controller extends Controller
{

    /**
     * {{entity}}Service
     *
     * @var {{servicesNamespace}}\{{entity}}Service 
     */
    protected ${{entityCamel}}Service;

    /**
     * Construct our {{entity}}Controller
     * 
     * @param {{servicesNamespace}}\{{entity}}Service ${{entityCamel}}Service
     */
    public function __construct({{entity}}Service ${{entityCamel}}Service)
    {
        $this->{{entityCamel}}Service = ${{entityCamel}}Service;
    }

    /**
     * Display a listing of the resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function index()
    {
        ${{entityCamelPlural}} = $this->{{entityCamel}}Service->all();
        return view('{{viewsPath}}{{entitySnake}}.index')->with('{{entityCamelPlural}}', ${{entityCamelPlural}});
    }

    /**
     * Show the form for creating a new resource.
     *
     * @return \Illuminate\Http\Response
     */
    public function create()
    {
        return view('{{viewsPath}}{{entitySnake}}.create');
    }

    /**
     * Store a newly created resource in storage.
     *
     * @param  {{requestsNamespace}}\{{createRequest}} $request
     * @return \Illuminate\Http\Response
     */
    public function store({{createRequest}} $request)
    {
        $result = $this->{{entityCamel}}Service->create($request->all());

        if ($result) {
            return redirect(route('{{entitySlugPlural}}.edit', ['id' => $result->id]))->with('message', 'Successfully created');
        }

        return back()->with('error', 'Failed to create');
    }

    /**
     * Show the form for editing the specified resource.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function edit($id)
    {
        ${{entityCamel}} = $this->{{entityCamel}}Service->find($id);

        return view('{{viewsPath}}{{entitySnake}}.edit')->with('{{entityCamel}}', ${{entityCamel}});
    }

    /**
     * Update the specified resource in storage.
     *
     * @param  {{requestsNamespace}}\{{updateRequest}} $request
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function update({{updateRequest}} $request, $id)
    {
        $result = $this->{{entityCamel}}Service->update($id, $request->all());

        if ($result) {
            return back()->with('message', 'Successfully updated');
        }

        return back()->with('error', 'Failed to update');
    }

    /**
     * Remove the specified resource from storage.
     *
     * @param  int $id
     * @return \Illuminate\Http\Response
     */
    public function destroy($id)
    {
        $result = $this->{{entityCamel}}Service->destroy($id);

        if ($result) {
            return redirect(route('{{entitySlugPlural}}.index'))->with('message', 'Successfully deleted');
        }

        return redirect(route('{{entitySlugPlural}}.index'))->with('message', 'Failed to delete');
    }

}
